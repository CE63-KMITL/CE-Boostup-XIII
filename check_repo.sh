#!/bin/bash

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞ pull repository
check_and_pull_repo() {
    local repo_dir=$1
    local branch=$2
    local repo_name=$3

    echo "$repo_name repository..."
    cd "$repo_dir" || { echo "‚ùå Failed to access $repo_name directory"; exit 1; }

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ repository
    if [ -n "$(git status --porcelain)" ]; then
        echo "‚ùå $repo_name has uncommitted changes or conflicts"
        exit 1
    fi

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö branch ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    current_branch=$(git rev-parse --abbrev-ref HEAD)
    if [ "$current_branch" != "$branch" ]; then
        echo "‚ùå $repo_name is on branch $current_branch, expected $branch"
        exit 1
    fi

    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å remote
    git fetch origin

    # Debug: ‡πÅ‡∏™‡∏î‡∏á HEAD ‡πÅ‡∏•‡∏∞ origin/branch
    local_head=$(git rev-parse HEAD)
    remote_head=$(git rev-parse origin/$branch)
    echo "Current HEAD: $local_head"
    echo "Origin/$branch: $remote_head"

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if [ "$local_head" != "$remote_head" ]; then
        echo "üîÑ Pulling latest data for $repo_name..."
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å HEAD ‡∏Å‡πà‡∏≠‡∏ô pull
        before_pull=$(git rev-parse HEAD)
        git pull origin "$branch" || { echo "‚ùå Failed to pull $repo_name"; exit 1; }
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ HEAD ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏•‡∏±‡∏á pull
        after_pull=$(git rev-parse HEAD)
        if [ "$before_pull" != "$after_pull" ]; then
            echo "‚úÖ $repo_name updated with new changes"
            return 1  # ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏£‡∏¥‡∏á
        else
            echo "‚ÑπÔ∏è $repo_name pull succeeded but no changes applied (e.g., already up to date)"
            return 0  # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
        fi
    else
        echo "‚ÑπÔ∏è $repo_name is up to date"
        return 0  # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
    fi
}

echo "======================================================="
echo "         üöÄ CE Boostup XIII - Starting System üöÄ"
echo "======================================================="
echo

echo "üîÑ Checking latest data from Git repositories..."
echo

# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
changes_detected=0

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞ pull repository ‡∏ï‡πà‡∏≤‡∏á‡πÜ
check_and_pull_repo "/home/dev/CE-Boostup-XIII" "main" "Plan (self)"
changes_detected=$((changes_detected + $?))
echo "Debug: changes_detected = $changes_detected"
echo
check_and_pull_repo "/home/dev/CE-Boostup-XIII/CE-Boostup-XIII-Backend" "dev" "Backend"
changes_detected=$((changes_detected + $?))
echo "Debug: changes_detected = $changes_detected"
echo
check_and_pull_repo "/home/dev/CE-Boostup-XIII/CE-Boostup-XIII-Frontend" "dev" "Frontend"
changes_detected=$((changes_detected + $?))
echo "Debug: changes_detected = $changes_detected"
echo
check_and_pull_repo "/home/dev/CE-Boostup-XIII/CE-Boostup-XIII-Compiler" "main" "Compiler"
changes_detected=$((changes_detected + $?))
echo "Debug: changes_detected = $changes_detected"
echo

echo "======================================================="
echo "     üê≥ Managing Docker Containers üê≥"
echo "======================================================="
echo

# ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Docker Compose ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
if [ $changes_detected -gt 0 ]; then
    echo "   ‚è¨ Stopping existing containers (if any)..."
    sudo docker compose down || { echo "‚ùå Failed to stop containers"; exit 1; }
    echo
    echo "   ‚è´ Starting and rebuilding containers..."
    echo
    sudo docker compose up --force-recreate --build -d || { echo "‚ùå Failed to start containers"; exit 1; }
    echo
else
    echo "   ‚ÑπÔ∏è No changes detected, skipping Docker Compose update."
    echo
fi

echo "======================================================="
echo "         ‚úÖ System Update Complete ‚úÖ"
echo "======================================================="